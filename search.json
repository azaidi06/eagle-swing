[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/exploratory-data-analysis/eda_nb.html",
    "href": "posts/exploratory-data-analysis/eda_nb.html",
    "title": "Initial Video Analysis",
    "section": "",
    "text": "we have 28 total videos & the file names are: \n['IMG_1014', 'IMG_1017', 'IMG_1015', 'IMG_1018', 'IMG_1023', 'IMG_1016', 'IMG_1019', 'IMG_0851', 'IMG_0855', 'IMG_0856', 'IMG_0849', 'IMG_0860', 'IMG_0857', 'IMG_0852', 'IMG_0853', 'IMG_0858', 'IMG_0859', 'IMG_0854', 'IMG_0848', 'IMG_0861', 'IMG_1090', 'IMG_1087', 'IMG_1088', 'IMG_1092', 'IMG_1086', 'IMG_1093', 'IMG_1091', 'IMG_1089']\n\n\n\n\n\n\n\n177M    ../../../data/full_videos/jun8/IMG_0856.MOV\n4.0M    ../../../data/clips/accurate/IMG_0856_swing_3_score_2.mp4\n\n\n\n\n\n\n\nCode\nclass video_metadata():\n    def __init__(self, file_path):\n        self.file_path = file_path\n        self.metadata = self.get_metadata(self.file_path)\n        self.height = self.metadata['height']\n        self.width = self.metadata['width']\n        self.fps = self.get_fps(self.metadata)\n        self.minutes = self.get_duration(self.metadata, minutes=True)\n        self.seconds = self.get_duration(self.metadata)\n        self.bitrate = self.get_bitrate(self.metadata)\n\n    def aggregate_metadata(self):\n        return {'file_name': str(self.file_path).split('/')[-1],\n                'fps': self.fps,\n                'height': self.height,\n                'width': self.width,\n                'minutes': self.minutes,\n                'seconds': self.seconds,\n                'bitrate': self.bitrate,\n                'file_path': self.file_path,\n                }\n    def get_metadata(self, file_path):\n        '''\n        Sometimes the video metadata is not in the first stream??\n        '''\n        meta_list = ffmpeg.probe(file_path)['streams']\n        for meta in meta_list:\n            try: \n                meta['height']\n                return meta\n            except:\n                pass\n                 \n    def get_fps(self, metadata):\n        fps = metadata['r_frame_rate']\n        return round(eval(fps))\n\n    def get_duration(self, metadata, minutes=False):\n        seconds = round(float(metadata['duration']))\n        # returns time in minutes\n        if minutes: \n            return seconds / 60\n        else: return seconds\n\n    def get_bitrate(self, metadata):\n        ### returns bit rate in megabyte -- divide by 1000 for Kbs and once more for Mbs\n        bitrate = int(metadata['bit_rate']) / 1000 / 1000\n        return bitrate\n\n\n\n\nCode\nvideo_metadata(video_paths[12]).aggregate_metadata()\n\n\n{'file_name': 'IMG_0857.MOV',\n 'fps': 30,\n 'height': 1080,\n 'width': 1920,\n 'minutes': 2.55,\n 'seconds': 153,\n 'bitrate': 8.605271,\n 'file_path': Path('../../../data/full_videos/jun8/IMG_0857.MOV')}\n\n\n\n\n\n\n\n\n\n\n\nfile_name\nfps\nheight\nwidth\nminutes\nseconds\nbitrate\nfile_path\n\n\n\n\n0\nIMG_0848.MOV\n30\n1080\n1920\n4.383333\n263\n8.610146\n../../../data/full_videos/jun8/IMG_0848.MOV\n\n\n1\nIMG_0849.MOV\n30\n1080\n1920\n9.200000\n552\n8.583966\n../../../data/full_videos/jun8/IMG_0849.MOV\n\n\n2\nIMG_0851.MOV\n30\n960\n540\n2.866667\n172\n4.692317\n../../../data/full_videos/jun8/IMG_0851.MOV\n\n\n3\nIMG_0852.MOV\n30\n540\n960\n2.950000\n177\n1.370111\n../../../data/full_videos/jun8/IMG_0852.MOV\n\n\n4\nIMG_0853.MOV\n30\n540\n960\n2.716667\n163\n1.367803\n../../../data/full_videos/jun8/IMG_0853.MOV\n\n\n5\nIMG_0854.MOV\n30\n1080\n1920\n2.616667\n157\n8.607743\n../../../data/full_videos/jun8/IMG_0854.MOV\n\n\n6\nIMG_0855.MOV\n30\n1080\n1920\n2.966667\n178\n8.598368\n../../../data/full_videos/jun8/IMG_0855.MOV\n\n\n7\nIMG_0856.MOV\n30\n1080\n1920\n2.783333\n167\n8.588547\n../../../data/full_videos/jun8/IMG_0856.MOV\n\n\n8\nIMG_0857.MOV\n30\n1080\n1920\n2.550000\n153\n8.605271\n../../../data/full_videos/jun8/IMG_0857.MOV\n\n\n9\nIMG_0858.MOV\n30\n568\n320\n3.050000\n183\n1.865664\n../../../data/full_videos/jun8/IMG_0858.MOV\n\n\n10\nIMG_0859.MOV\n30\n1080\n1920\n2.516667\n151\n8.624519\n../../../data/full_videos/jun8/IMG_0859.MOV\n\n\n11\nIMG_0860.MOV\n30\n1920\n1080\n1.800000\n108\n10.544283\n../../../data/full_videos/jun8/IMG_0860.MOV\n\n\n12\nIMG_0861.MOV\n30\n1080\n1920\n7.216667\n433\n8.584579\n../../../data/full_videos/jun8/IMG_0861.MOV\n\n\n13\nIMG_1014.MOV\n60\n1080\n1920\n7.400000\n444\n13.103602\n../../../data/full_videos/aug9/IMG_1014.MOV\n\n\n14\nIMG_1015.MOV\n60\n1080\n1920\n6.550000\n393\n13.103961\n../../../data/full_videos/aug9/IMG_1015.MOV\n\n\n15\nIMG_1016.MOV\n60\n1080\n1920\n5.483333\n329\n13.110048\n../../../data/full_videos/aug9/IMG_1016.MOV\n\n\n16\nIMG_1017.MOV\n60\n1080\n1920\n2.866667\n172\n13.134301\n../../../data/full_videos/aug9/IMG_1017.MOV\n\n\n17\nIMG_1018.MOV\n30\n2160\n3840\n5.250000\n315\n25.100516\n../../../data/full_videos/aug9/IMG_1018.MOV\n\n\n18\nIMG_1019.MOV\n60\n2160\n3840\n4.650000\n279\n53.182729\n../../../data/full_videos/aug9/IMG_1019.MOV\n\n\n19\nIMG_1023.MOV\n60\n2160\n3840\n6.883333\n413\n56.143823\n../../../data/full_videos/aug9/IMG_1023.MOV\n\n\n20\nIMG_1086.MOV\n60\n1920\n1080\n2.883333\n173\n15.800221\n../../../data/full_videos/sep14/IMG_1086.MOV\n\n\n21\nIMG_1087.MOV\n60\n1920\n1080\n2.833333\n170\n15.820864\n../../../data/full_videos/sep14/IMG_1087.MOV\n\n\n22\nIMG_1088.MOV\n60\n1920\n1080\n2.433333\n146\n15.823184\n../../../data/full_videos/sep14/IMG_1088.MOV\n\n\n23\nIMG_1089.MOV\n60\n1920\n1080\n4.200000\n252\n15.795585\n../../../data/full_videos/sep14/IMG_1089.MOV\n\n\n24\nIMG_1090.MOV\n60\n1920\n1080\n3.383333\n203\n15.800890\n../../../data/full_videos/sep14/IMG_1090.MOV\n\n\n25\nIMG_1091.MOV\n60\n1920\n1080\n3.750000\n225\n15.787499\n../../../data/full_videos/sep14/IMG_1091.MOV\n\n\n26\nIMG_1092.MOV\n60\n1920\n1080\n3.200000\n192\n15.800213\n../../../data/full_videos/sep14/IMG_1092.MOV\n\n\n27\nIMG_1093.MOV\n60\n1920\n1080\n3.200000\n192\n15.792813\n../../../data/full_videos/sep14/IMG_1093.MOV\n\n\n\n\n\n\n\nNow we have a quick and easily understandable way to extract all the metadata relative to our videos and get a better understaning of where outliers may lie with respect to data quality or frame rate and also to better understand the overall distribution we have amongst our data"
  },
  {
    "objectID": "posts/exploratory-data-analysis/eda_nb.html#lets-take-a-look-at-our-full-videos-and-pull-some-metadata-from-them-in-case-we-need-this-information-later-on",
    "href": "posts/exploratory-data-analysis/eda_nb.html#lets-take-a-look-at-our-full-videos-and-pull-some-metadata-from-them-in-case-we-need-this-information-later-on",
    "title": "Initial Video Analysis",
    "section": "",
    "text": "we have 28 total videos & the file names are: \n['IMG_1014', 'IMG_1017', 'IMG_1015', 'IMG_1018', 'IMG_1023', 'IMG_1016', 'IMG_1019', 'IMG_0851', 'IMG_0855', 'IMG_0856', 'IMG_0849', 'IMG_0860', 'IMG_0857', 'IMG_0852', 'IMG_0853', 'IMG_0858', 'IMG_0859', 'IMG_0854', 'IMG_0848', 'IMG_0861', 'IMG_1090', 'IMG_1087', 'IMG_1088', 'IMG_1092', 'IMG_1086', 'IMG_1093', 'IMG_1091', 'IMG_1089']\n\n\n\n\n\n\n\n177M    ../../../data/full_videos/jun8/IMG_0856.MOV\n4.0M    ../../../data/clips/accurate/IMG_0856_swing_3_score_2.mp4\n\n\n\n\n\n\n\nCode\nclass video_metadata():\n    def __init__(self, file_path):\n        self.file_path = file_path\n        self.metadata = self.get_metadata(self.file_path)\n        self.height = self.metadata['height']\n        self.width = self.metadata['width']\n        self.fps = self.get_fps(self.metadata)\n        self.minutes = self.get_duration(self.metadata, minutes=True)\n        self.seconds = self.get_duration(self.metadata)\n        self.bitrate = self.get_bitrate(self.metadata)\n\n    def aggregate_metadata(self):\n        return {'file_name': str(self.file_path).split('/')[-1],\n                'fps': self.fps,\n                'height': self.height,\n                'width': self.width,\n                'minutes': self.minutes,\n                'seconds': self.seconds,\n                'bitrate': self.bitrate,\n                'file_path': self.file_path,\n                }\n    def get_metadata(self, file_path):\n        '''\n        Sometimes the video metadata is not in the first stream??\n        '''\n        meta_list = ffmpeg.probe(file_path)['streams']\n        for meta in meta_list:\n            try: \n                meta['height']\n                return meta\n            except:\n                pass\n                 \n    def get_fps(self, metadata):\n        fps = metadata['r_frame_rate']\n        return round(eval(fps))\n\n    def get_duration(self, metadata, minutes=False):\n        seconds = round(float(metadata['duration']))\n        # returns time in minutes\n        if minutes: \n            return seconds / 60\n        else: return seconds\n\n    def get_bitrate(self, metadata):\n        ### returns bit rate in megabyte -- divide by 1000 for Kbs and once more for Mbs\n        bitrate = int(metadata['bit_rate']) / 1000 / 1000\n        return bitrate\n\n\n\n\nCode\nvideo_metadata(video_paths[12]).aggregate_metadata()\n\n\n{'file_name': 'IMG_0857.MOV',\n 'fps': 30,\n 'height': 1080,\n 'width': 1920,\n 'minutes': 2.55,\n 'seconds': 153,\n 'bitrate': 8.605271,\n 'file_path': Path('../../../data/full_videos/jun8/IMG_0857.MOV')}\n\n\n\n\n\n\n\n\n\n\n\nfile_name\nfps\nheight\nwidth\nminutes\nseconds\nbitrate\nfile_path\n\n\n\n\n0\nIMG_0848.MOV\n30\n1080\n1920\n4.383333\n263\n8.610146\n../../../data/full_videos/jun8/IMG_0848.MOV\n\n\n1\nIMG_0849.MOV\n30\n1080\n1920\n9.200000\n552\n8.583966\n../../../data/full_videos/jun8/IMG_0849.MOV\n\n\n2\nIMG_0851.MOV\n30\n960\n540\n2.866667\n172\n4.692317\n../../../data/full_videos/jun8/IMG_0851.MOV\n\n\n3\nIMG_0852.MOV\n30\n540\n960\n2.950000\n177\n1.370111\n../../../data/full_videos/jun8/IMG_0852.MOV\n\n\n4\nIMG_0853.MOV\n30\n540\n960\n2.716667\n163\n1.367803\n../../../data/full_videos/jun8/IMG_0853.MOV\n\n\n5\nIMG_0854.MOV\n30\n1080\n1920\n2.616667\n157\n8.607743\n../../../data/full_videos/jun8/IMG_0854.MOV\n\n\n6\nIMG_0855.MOV\n30\n1080\n1920\n2.966667\n178\n8.598368\n../../../data/full_videos/jun8/IMG_0855.MOV\n\n\n7\nIMG_0856.MOV\n30\n1080\n1920\n2.783333\n167\n8.588547\n../../../data/full_videos/jun8/IMG_0856.MOV\n\n\n8\nIMG_0857.MOV\n30\n1080\n1920\n2.550000\n153\n8.605271\n../../../data/full_videos/jun8/IMG_0857.MOV\n\n\n9\nIMG_0858.MOV\n30\n568\n320\n3.050000\n183\n1.865664\n../../../data/full_videos/jun8/IMG_0858.MOV\n\n\n10\nIMG_0859.MOV\n30\n1080\n1920\n2.516667\n151\n8.624519\n../../../data/full_videos/jun8/IMG_0859.MOV\n\n\n11\nIMG_0860.MOV\n30\n1920\n1080\n1.800000\n108\n10.544283\n../../../data/full_videos/jun8/IMG_0860.MOV\n\n\n12\nIMG_0861.MOV\n30\n1080\n1920\n7.216667\n433\n8.584579\n../../../data/full_videos/jun8/IMG_0861.MOV\n\n\n13\nIMG_1014.MOV\n60\n1080\n1920\n7.400000\n444\n13.103602\n../../../data/full_videos/aug9/IMG_1014.MOV\n\n\n14\nIMG_1015.MOV\n60\n1080\n1920\n6.550000\n393\n13.103961\n../../../data/full_videos/aug9/IMG_1015.MOV\n\n\n15\nIMG_1016.MOV\n60\n1080\n1920\n5.483333\n329\n13.110048\n../../../data/full_videos/aug9/IMG_1016.MOV\n\n\n16\nIMG_1017.MOV\n60\n1080\n1920\n2.866667\n172\n13.134301\n../../../data/full_videos/aug9/IMG_1017.MOV\n\n\n17\nIMG_1018.MOV\n30\n2160\n3840\n5.250000\n315\n25.100516\n../../../data/full_videos/aug9/IMG_1018.MOV\n\n\n18\nIMG_1019.MOV\n60\n2160\n3840\n4.650000\n279\n53.182729\n../../../data/full_videos/aug9/IMG_1019.MOV\n\n\n19\nIMG_1023.MOV\n60\n2160\n3840\n6.883333\n413\n56.143823\n../../../data/full_videos/aug9/IMG_1023.MOV\n\n\n20\nIMG_1086.MOV\n60\n1920\n1080\n2.883333\n173\n15.800221\n../../../data/full_videos/sep14/IMG_1086.MOV\n\n\n21\nIMG_1087.MOV\n60\n1920\n1080\n2.833333\n170\n15.820864\n../../../data/full_videos/sep14/IMG_1087.MOV\n\n\n22\nIMG_1088.MOV\n60\n1920\n1080\n2.433333\n146\n15.823184\n../../../data/full_videos/sep14/IMG_1088.MOV\n\n\n23\nIMG_1089.MOV\n60\n1920\n1080\n4.200000\n252\n15.795585\n../../../data/full_videos/sep14/IMG_1089.MOV\n\n\n24\nIMG_1090.MOV\n60\n1920\n1080\n3.383333\n203\n15.800890\n../../../data/full_videos/sep14/IMG_1090.MOV\n\n\n25\nIMG_1091.MOV\n60\n1920\n1080\n3.750000\n225\n15.787499\n../../../data/full_videos/sep14/IMG_1091.MOV\n\n\n26\nIMG_1092.MOV\n60\n1920\n1080\n3.200000\n192\n15.800213\n../../../data/full_videos/sep14/IMG_1092.MOV\n\n\n27\nIMG_1093.MOV\n60\n1920\n1080\n3.200000\n192\n15.792813\n../../../data/full_videos/sep14/IMG_1093.MOV\n\n\n\n\n\n\n\nNow we have a quick and easily understandable way to extract all the metadata relative to our videos and get a better understaning of where outliers may lie with respect to data quality or frame rate and also to better understand the overall distribution we have amongst our data"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Eagle Swing Takes Off",
    "section": "",
    "text": "This is the first post in the R&D page for Eagle Swing. Welcome!\n\nThe idea behind Eagle Swing is simple, some days you have a good day at the range and sometimes you can’t figure out all the things you’re off on. Here, we take in a recorded video of a driving range session and then after processing the video with our models –&gt; we can generate insights into what you are doing when you hit your best swing compared to those swings where you can’t seem to connect.\nThis repo and website will be organized in a specific fashion, in creating the end product, we’ll run into a ton of questions along the way that need to be answered. In this pursuit, each notebook/post will be featuring a specific problem that needs further exploration, sometimes code will be generated within the notebook for further use, while sometimes that code will be only useful for the small and specific purpose of the task at hand."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "eagle-swing",
    "section": "",
    "text": "Initial Video Analysis\n\n\n\nEDA\n\n\n\n\n\n\n\n\n\nSep 22, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nEagle Swing Takes Off\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nSep 19, 2025\n\n\nAli Zaidi\n\n\n\n\n\nNo matching items"
  }
]